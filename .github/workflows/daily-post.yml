name: Social Media Posting (Scheduled)

on:
  schedule:
    # Check for scheduled posts 4 times daily at posting times (Eastern Time):
    # 9:00 AM EST = 14:00 UTC (EST) / 13:00 UTC (EDT)
    # 11:00 AM EST = 16:00 UTC (EST) / 15:00 UTC (EDT)  
    # 1:00 PM EST = 18:00 UTC (EST) / 17:00 UTC (EDT)
    # 3:00 PM EST = 20:00 UTC (EST) / 19:00 UTC (EDT)
    
    # Winter schedule (EST - Nov-Mar)
    - cron: '0 14 * 11-12,1-3 1-5'  # 9am EST, Mon-Fri
    - cron: '0 16 * 11-12,1-3 1-5'  # 11am EST, Mon-Fri
    - cron: '0 18 * 11-12,1-3 1-5'  # 1pm EST, Mon-Fri
    - cron: '0 20 * 11-12,1-3 1-5'  # 3pm EST, Mon-Fri
    
    # Summer schedule (EDT - Mar-Nov)  
    - cron: '0 13 * 4-10 1-5'  # 9am EDT, Mon-Fri
    - cron: '0 15 * 4-10 1-5'  # 11am EDT, Mon-Fri
    - cron: '0 17 * 4-10 1-5'  # 1pm EDT, Mon-Fri
    - cron: '0 19 * 4-10 1-5'  # 3pm EDT, Mon-Fri
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  post-daily:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create data directory
      run: mkdir -p data
    
    - name: Download database from artifacts (if exists)
      uses: dawidd6/action-download-artifact@v3
      with:
        name: posts-database
        path: data/
        workflow: fetch-posts.yml
        workflow_conclusion: success
        if_no_artifact_found: ignore
      continue-on-error: true
    
    - name: Fix database schema (add image_url column if missing)
      run: |
        python fix_database_schema.py
      continue-on-error: true
    
    - name: Post daily message
      env:
        BLOG_RSS_FEED_URL: ${{ secrets.BLOG_RSS_FEED_URL }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        GENERATE_IMAGES: ${{ secrets.GENERATE_IMAGES || 'true' }}
        LINKEDIN_ENABLED: ${{ secrets.LINKEDIN_ENABLED || 'false' }}
        LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
        LINKEDIN_USER_ID: ${{ secrets.LINKEDIN_USER_ID }}
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        X_BEARER_TOKEN: ${{ secrets.X_BEARER_TOKEN }}
        DATABASE_PATH: ./data/posts.db
        POSTS_PER_BLOG: 5
      run: |
        python main.py --post-daily
    
    - name: Upload database as artifact
      uses: actions/upload-artifact@v4
      with:
        name: posts-database
        path: data/posts.db
        retention-days: 90

